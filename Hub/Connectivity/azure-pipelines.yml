# Neudesic Enterprise Landing Zone CI/CD Pipeline

trigger:
- none
# - main

variables:
  azureServiceConnection: 'ServiceConnection'

  companyCode: 'src'
  nameSeparator: ''
  location: 'westus2'
  locationCode: 'wus2'
  connectivityEnvironmentCode: 'con'
  identityEnvironmentCode: 'idn'
  managementEnvironmentCode: 'mgmt'
  developmentEnvironmentCode: 'dev'
  testingEnvironemntCode: 'tst'
  stagingEnvironmentCode: 'stg'
  productionEnvironmentCode: 'prd'

  parametersFile: 'parameters.jsonc'
  
  connectivityCAFPrefix: '$(companyCode)$(nameSeparator)$(connectivityEnvironmentCode)$(nameSeparator)$(locationCode)'
  managementCAFPrefix: '$(companyCode)$(nameSeparator)$(managementEnvironmentCode)$(nameSeparator)$(locationCode)'
  identityCAFPrefix: '$(companyCode)$(nameSeparator)$(identityEnvironmentCode)$(nameSeparator)$(locationCode)'
  developmentCAFPrefix: '$(companyCode)$(nameSeparator)$(developmentEnvironmentCode)$(nameSeparator)$(locationCode)'
  testingCAFPrefix: '$(companyCode)$(nameSeparator)$(testingEnvironemntCode)$(nameSeparator)$(locationCode)'
  stagingCAFPrefix: '$(companyCode)$(nameSeparator)$(stagingEnvironmentCode)$(nameSeparator)$(locationCode)'
  productionCAFPrefix: '$(companyCode)$(nameSeparator)$(productionEnvironmentCode)$(nameSeparator)$(locationCode)'

  connectivityNetworkResourceGroupName: '$(connectivityCAFPrefix)networkrg'
  connectivityDNSResourceGroupName: '$(connectivityCAFPrefix)dnsrg'
  connectivityOpenAIResourceGroupName: '$(connectivityCAFPrefix)openairg'

  managementAutomationResourceGroupName: '$(managementCAFPrefix)automationrg'
  managementLogsResourceGroupName: '$(managementCAFPrefix)logsrg'

  identityActiveDirectoryResourceGroupName: '$(identityCAFPrefix)activedirectoryrg'
  identityKeyVaultResourceGroupName: '$(identityCAFPrefix)keyvaultrg'
  
## DevOps variables
## Set to 'what-if' for dry run
  # action: 'what-if'
  action: 'create'     

## Global Customer and Deployment variables
## Set DevOps verbosity on/off
  System.Debug: true

## Set DevOps pool to self-hosted or Azure, Windows or Ubuntu runner
pool:
    # name: self-hosted # Self-hosted pool (WSL)
    name: Azure Pipelines # Default Azure-hosted pool
    vmImage: ubuntu-latest # Ubuntu-based runner
    # vmImage: windows-latest # Windows-based runner

# Set the pipeline stages    
stages:
- stage: connectivityResourceGroups
  displayName: '[Connectivity] Resource Groups'
  variables:
    templateFile: 'modules/01-connectivityResourceGroups.bicep'
    environment: Core
    subscription: $(subCore)
  jobs:
  - deployment: connectivityResourceGroups
    environment: Core
    strategy:
     runOnce:
        deploy:
           steps:
            - checkout: self
# Bicep deployment tasks            
            - task: AzureCLI@2
              name: deploy
              displayName: "Deploy Bicep Code"
              inputs:
                azureSubscription: $(azureServiceConnection)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  pwd
                  az account set --subscription $(subscription)
                  az deployment sub $(action) --subscription $(subscription) --location $(location) --template-file $(templateFile) \
                  --parameters @$(parametersFile) --parameters \
                  location=$(location) connectivityNetworkResourceGroupName=$(connectivityNetworkResourceGroupName) \
                  connectivityOpenAIResourceGroupName=$(connectivityOpenAIResourceGroupName) \
                  connectivityDNSResourceGroupName=$(connectivityDNSResourceGroupName)
                
- stage: connectivityVirtualNetwork
  displayName: '[Connectivity] Virtual Network'
  variables:
    templateFile: 'modules/02-connectivityVirtualNetwork.bicep'
    CAFPrefix: $(connectivityCAFPrefix)
    subscription: $(subCore)
  jobs:
  - deployment: connectivityVirtualNetwork
    environment: Core
    strategy:
     runOnce:
        deploy:
           steps:
            - checkout: self
# Lint Bicep code
            - task: AzureCLI@2
              name: lint
              displayName: "Lint Bicep Code"
              inputs:
                azureSubscription: $(azureServiceConnection)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  pwd
                  az bicep build --file $(Build.SourcesDirectory)/$(templateFile)

# Bicep deployment tasks            
            - task: AzureCLI@2
              name: deploy
              displayName: "Deploy Bicep Code"
              inputs:
                azureSubscription: $(azureServiceConnection)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  pwd
                  az account set --subscription $(subscription)
                  az deployment sub $(action) --subscription $(subscription) --location $(location) --template-file $(templateFile) \
                  --parameters @$(parametersFile) --parameters \
                  CAFPrefix=$(CAFPrefix) location=$(location) \
                  connectivityNetworkResourceGroupName=$(connectivityNetworkResourceGroupName) 

- stage: connectivityPrivateDNSZones
  displayName: '[Connectivity] Private DNS Zones'
  variables:
    templateFile: 'modules/03-connectivityPrivateDNSZones.bicep'
    subscription: $(subCore)
    virtualNetworkName: '$(connectivityCAFPrefix)vnet'
    virtualNetworkId: $(az network vnet show --resource-group $(connectivityNetworkResourceGroupName) --name $(virtualNetworkName) --query id -o tsv)
  jobs:
  - deployment: connectivityPrivateDNSZones
    environment: Core
    strategy:
     runOnce:
        deploy:
           steps:
            
            - checkout: self
# Lint Bicep code
            - task: AzureCLI@2
              name: lint
              displayName: "Lint Bicep Code"
              inputs:
                azureSubscription: $(azureServiceConnection)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  pwd
                  az bicep build --file $(Build.SourcesDirectory)/$(templateFile)

# Bicep deployment tasks            
            - task: AzureCLI@2
              name: corePrivateDNS
              displayName: "Deploy Bicep Code"
              inputs:
                azureSubscription: $(azureServiceConnection)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  pwd
                  az account set --subscription $(subscription)
                  az deployment sub $(action) --subscription $(subscription) --location $(location) --template-file $(templateFile) \
                  --parameters @$(parametersFile) --parameters \
                  connectivityDNSResourceGroupName=$(connectivityDNSResourceGroupName) \
                  virtualNetworkId=$(virtualNetworkId) virtualNetworkName=$(virtualNetworkName) 

- stage: managementResourceGroups
  displayName: '[Management] Resource Groups'
  variables:
    templateFile: 'modules/10-managementResourceGroups.bicep'
    subscription: $(subCore)
  jobs:
  - deployment: managementResourceGroups
    environment: Core
    strategy:
     runOnce:
        deploy:
           steps:
            - checkout: self
# Bicep deployment tasks            
            - task: AzureCLI@2
              name: deploy
              displayName: "Deploy Bicep Code"
              inputs:
                azureSubscription: $(azureServiceConnection)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  pwd
                  az account set --subscription $(subscription)
                  az deployment sub $(action) --subscription $(subscription) --location $(location) --template-file $(templateFile) \
                  --parameters @$(parametersFile) --parameters \
                  location=$(location) managementLogsResourceGroupName=$(managementLogsResourceGroupName) \
                  managementAutomationResourceGroupName=$(managementAutomationResourceGroupName)

- stage: managementLogs
  displayName: '[Management] Logs'
  variables:
    templateFile: 'modules/11-managementLogs.bicep'
    environment: Core
    subscription: $(subCore)
    CAFPrefix: $(managementCAFPrefix)
  jobs:
  - deployment: managementLogs
    environment: 'Core'
    strategy:
     runOnce:
        deploy:
          steps:
          - checkout: self
# Bicep deployment tasks            
          - task: AzureCLI@2
            name: 'Deploy_Bicep'
            displayName: "Deploy Bicep Code"
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                pwd
                az account set --subscription $(subscription)
                az deployment sub $(action) --subscription $(subscription) --location $(location) --template-file $(templateFile) \
                --parameters @$(parametersFile) --parameters \
                location=$(location) managementLogsResourceGroupName=$(managementLogsResourceGroupName) \
                CAFPrefix=$(CAFPrefix)

## Add 12-uami

- stage: managementAutomation
  displayName: '[Management] Automation'
  variables:
    templateFile: 'modules/13-managementAutomation.bicep'
    environment: Core
    subscription: $(subCore)
    CAFPrefix: $(managementCAFPrefix)
    virtualNetworkName: '$(connectivityCAFPrefix)vnet'
    privateDNSZoneId: $(az network private-dns zone list --resource-group $(connectivityDNSResourceGroupName) --query "[?name=='privatelink.azure-automation.net'].id" --output tsv)
    AzurePrivateEndpointSubnetId: $(az network vnet subnet list --subscription $(subCore) --resource-group $(connectivityNetworkResourceGroupName) --vnet-name $(virtualNetworkName) --query "[?name=='AzurePrivateEndpointSubnet'].id" --output tsv)
    logAnalyticsWorkspaceName: '$(managementCAFPrefix)law'
    logAnalyticsWorkspaceId: $(az monitor log-analytics workspace show --resource-group $(managementLogsResourceGroupName) --workspace-name $(logAnalyticsWorkspaceName) --query id -o tsv)
  jobs:                  
  - deployment: managementAutomation
    environment: 'Core'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
# Bicep deployment tasks            
          - task: AzureCLI@2
            name: 'Deploy_Bicep'
            displayName: "Deploy Bicep Code for Azure Foundation"
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                pwd
                az account set --subscription $(subscription)
                az deployment sub $(action) --subscription $(subscription) --location $(location) --template-file $(templateFile) \
                --parameters @$(parametersFile) --parameters \
                location=$(location) managementAutomationResourceGroupName=$(managementAutomationResourceGroupName) \
                CAFPrefix=$(CAFPrefix) AzurePrivateEndpointSubnetId=$(AzurePrivateEndpointSubnetId) nameSeparator=$(nameSeparator) \
                privateDNSZoneId=$(privateDNSZoneId) logAnalyticsWorkspaceName=$(logAnalyticsWorkspaceName) \
                managementLogsResourceGroupName=$(managementLogsResourceGroupName) logAnalyticsWorkspaceId=$(logAnalyticsWorkspaceId)

- stage: identityResourceGroups
  displayName: '[Identity] Resource Groups'
  variables:
    templateFile: 'modules/20-identityResourceGroups.bicep'
    subscription: $(subCore)
  jobs:
  - deployment: identityResourceGroups
    environment: 'Core'
    strategy:
      runOnce:
        deploy:
           steps:
            - checkout: self
# Bicep deployment tasks            
            - task: AzureCLI@2
              name: 'Deploy_Bicep'
              displayName: "Deploy Bicep Code"
              inputs:
                azureSubscription: $(azureServiceConnection)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  pwd
                  az deployment sub $(action) --subscription $(subscription) --location $(location) --template-file $(templateFile) \
                  --parameters @$(parametersFile) --parameters \
                  location=$(location) identityActiveDirectoryResourceGroupName=$(identityActiveDirectoryResourceGroupName) \
                  identityKeyVaultResourceGroupName=$(identityKeyVaultResourceGroupName)

- stage: identityManagedIdentiy
  displayName: '[Identity] Managed Identiy'
  variables:
    templateFile: 'modules/21-identityKeyVault.bicep'
    environment: Core
    subscription: $(subCore)
    CAFPrefix: $(identityCAFPrefix)
    virtualNetworkName: '$(connectivityCAFPrefix)vnet'
    privateDNSZoneId: $(az network private-dns zone list --resource-group $(connectivityDNSResourceGroupName) --query "[?name=='privatelink.vaultcore.azure.net'].id" --output tsv)
    AzurePrivateEndpointSubnetId: $(az network vnet subnet list --subscription $(subCore) --resource-group $(connectivityNetworkResourceGroupName) --vnet-name $(virtualNetworkName) --query "[?name=='AzurePrivateEndpointSubnet'].id" --output tsv)
    logAnalyticsWorkspaceName: '$(managementCAFPrefix)law'
    logAnalyticsWorkspaceId: $(az monitor log-analytics workspace show --resource-group $(managementLogsResourceGroupName) --workspace-name $(logAnalyticsWorkspaceName) --query id -o tsv)
    logAnalyticsWorkspaceCustomerId: $(az monitor log-analytics workspace show --resource-group $(managementLogsResourceGroupName) --workspace-name $(logAnalyticsWorkspaceName) --query customerId -o tsv)
    logAnalyticsWorkspaceKey: $(az monitor log-analytics workspace get-shared-keys --resource-group $(managementLogsResourceGroupName) --workspace-name $(logAnalyticsWorkspaceName) --query primarySharedKey -o tsv)
  jobs:                  
  - deployment: identityManagedIdentiy
    environment: 'Core'
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
# Bicep deployment tasks            
            - task: AzureCLI@2
              name: 'Deploy_Bicep'
              displayName: "Deploy Bicep Code"
              inputs:
                azureSubscription: $(azureServiceConnection)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  pwd
                  az account set --subscription $(subscription)
                  az deployment sub $(action) --subscription $(subscription) --location $(location) --template-file $(templateFile) \
                  --parameters @$(parametersFile) --parameters \
                  location=$(location) identityKeyVaultResourceGroupName=$(identityKeyVaultResourceGroupName) \
                  CAFPrefix=$(CAFPrefix) AzurePrivateEndpointSubnetId=$(AzurePrivateEndpointSubnetId) nameSeparator=$(nameSeparator) \
                  privateDNSZoneId=$(privateDNSZoneId) identityKeyVaultResourceGroupName=$(identityKeyVaultResourceGroupName) \
                  logAnalyticsWorkspaceId=$(logAnalyticsWorkspaceId)

- stage: identityKeyVault
  displayName: '[Identity] Key Vault'
  variables:
    templateFile: 'modules/22-identityKeyVault.bicep'
    environment: Core
    subscription: $(subCore)
    CAFPrefix: $(identityCAFPrefix)
    virtualNetworkName: '$(connectivityCAFPrefix)vnet'
    privateDNSZoneId: $(az network private-dns zone list --resource-group $(connectivityDNSResourceGroupName) --query "[?name=='privatelink.vaultcore.azure.net'].id" --output tsv)
    AzurePrivateEndpointSubnetId: $(az network vnet subnet list --subscription $(subCore) --resource-group $(connectivityNetworkResourceGroupName) --vnet-name $(virtualNetworkName) --query "[?name=='AzurePrivateEndpointSubnet'].id" --output tsv)
    logAnalyticsWorkspaceName: '$(managementCAFPrefix)law'
    logAnalyticsWorkspaceId: $(az monitor log-analytics workspace show --resource-group $(managementLogsResourceGroupName) --workspace-name $(logAnalyticsWorkspaceName) --query id -o tsv)
    logAnalyticsWorkspaceCustomerId: $(az monitor log-analytics workspace show --resource-group $(managementLogsResourceGroupName) --workspace-name $(logAnalyticsWorkspaceName) --query customerId -o tsv)
    logAnalyticsWorkspaceKey: $(az monitor log-analytics workspace get-shared-keys --resource-group $(managementLogsResourceGroupName) --workspace-name $(logAnalyticsWorkspaceName) --query primarySharedKey -o tsv)
  jobs:                  
  - deployment: identityKeyVault
    environment: 'Core'
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
# Bicep deployment tasks            
            - task: AzureCLI@2
              name: 'Deploy_Bicep'
              displayName: "Deploy Bicep Code"
              inputs:
                azureSubscription: $(azureServiceConnection)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  pwd
                  az account set --subscription $(subscription)
                  az deployment sub $(action) --subscription $(subscription) --location $(location) --template-file $(templateFile) \
                  --parameters @$(parametersFile) --parameters \
                  location=$(location) identityKeyVaultResourceGroupName=$(identityKeyVaultResourceGroupName) \
                  CAFPrefix=$(CAFPrefix) AzurePrivateEndpointSubnetId=$(AzurePrivateEndpointSubnetId) nameSeparator=$(nameSeparator) \
                  privateDNSZoneId=$(privateDNSZoneId) identityKeyVaultResourceGroupName=$(identityKeyVaultResourceGroupName) \
                  logAnalyticsWorkspaceId=$(logAnalyticsWorkspaceId)
         
## add 23 - add secrets                  

- stage: identityDomainControllers
  displayName: '[Identity] Domain Controllers'
  variables:
    templateFile: 'modules/24-identityDomainControllers.bicep'
    environment: Core
    subscription: $(subCore)
    CAFPrefix: $(identityCAFPrefix)
    virtualNetworkName: '$(connectivityCAFPrefix)vnet'
    privateDNSZoneId: $(az network private-dns zone list --resource-group $(connectivityDNSResourceGroupName) --query "[?name=='privatelink.vaultcore.azure.net'].id" --output tsv)
    AzurePrivateEndpointSubnetId: $(az network vnet subnet list --subscription $(subCore) --resource-group $(connectivityNetworkResourceGroupName) --vnet-name $(virtualNetworkName) --query "[?name=='AzurePrivateEndpointSubnet'].id" --output tsv)
    logAnalyticsWorkspaceName: '$(managementCAFPrefix)law'
    logAnalyticsWorkspaceId: $(az monitor log-analytics workspace show --resource-group $(managementLogsResourceGroupName) --workspace-name $(logAnalyticsWorkspaceName) --query id -o tsv)
    logAnalyticsWorkspaceCustomerId: $(az monitor log-analytics workspace show --resource-group $(managementLogsResourceGroupName) --workspace-name $(logAnalyticsWorkspaceName) --query customerId -o tsv)
    logAnalyticsWorkspaceKey: $(az monitor log-analytics workspace get-shared-keys --resource-group $(managementLogsResourceGroupName) --workspace-name $(logAnalyticsWorkspaceName) --query primarySharedKey -o tsv)
  jobs:                  
  - deployment: identityDomainControllers
    environment: 'Core'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
# Bicep deployment tasks            
          - task: AzureCLI@2
            name: 'Deploy_Bicep'
            displayName: "Deploy Bicep Code"
            inputs:
              azureSubscription: $(azureServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                pwd
                az account set --subscription $(subscription)
                az deployment sub $(action) --subscription $(subscription) --location $(location) --template-file $(templateFile) \
                --parameters @$(parametersFile) --parameters \
                location=$(location) identityKeyVaultResourceGroupName=$(identityKeyVaultResourceGroupName) \
                CAFPrefix=$(CAFPrefix) AzurePrivateEndpointSubnetId=$(AzurePrivateEndpointSubnetId) nameSeparator=$(nameSeparator) \
                privateDNSZoneId=$(privateDNSZoneId) identityKeyVaultResourceGroupName=$(identityKeyVaultResourceGroupName) \
                logAnalyticsWorkspaceId=$(logAnalyticsWorkspaceId)                  